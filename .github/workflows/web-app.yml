name: Web App

on:
  push:
    paths: 'src/web-app/**'

jobs:
  test:
    name: Test with Jest
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'src/web-app'
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '12'
          cache: 'npm'
          cache-dependency-path: src/web-app/package-lock.json

      - name: Install dependencies with npm
        run: npm install

      - name: Run tests and generate coverage
        run: npm run test:ci

      - name: Create coverage artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: |
            src/web-app/coverage/lcov.info
            src/web-app/coverage/test-reporter.xml

      - name: Tests âœ…
        if: ${{ success() }}
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "context": "tests",
            "state": "success",
            "description": "Tests passed",
            "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }'

      - name: Tests ðŸš¨
        if: ${{ failure() }}
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "context": "tests",
            "state": "failure",
            "description": "Tests failed",
            "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }'

  sonar:
    name: Scan With Sonarqube
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download coverage artifact
        uses: actions/download-artifact@v2
        with:
          name: coverage
          path: ${{ github.workspace }}/src/web-app/coverage

      - name: Run Sonarqube scan
        uses: sonarsource/sonarqube-scan-action@master
        with:
          projectBaseDir: src/web-app
          args: >
            -Dsonar.projectKey=kwetter-web-app
            -Dsonar.sources=src
            -Dsonar.tests=src
            -Dsonar.test.inclusions=src/**/*.test.js
            -Dsonar.testExecutionReportPaths=coverage/test-reporter.xml
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_WEB_APP }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
